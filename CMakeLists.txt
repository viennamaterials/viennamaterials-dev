PROJECT(ViennaMaterials)

cmake_minimum_required(VERSION 2.6)

INCLUDE_DIRECTORIES(".")

list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

option(BUILD_EXAMPLES "Build the examples" ON)
option(BUILD_DTD_CHECK_SUPPORT "Perform DTD checks of the input XML material data - requires libxml2" OFF)
option(BUILD_SERIALIZATION "Build the material library with Boost Serialization support" OFF)

#set default build type 
IF (NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

#set compiler flags
SET(CMAKE_CXX_FLAGS "-Wall -pedantic")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -g")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3")
SET(CMAKE_CXX_FLAGS_DEBUG  "-O0 -g")

#INCLUDE(external/UseUDUNITS.cmake)
#ADD_DEFINITIONS(-DHAVE_UDUNITS)
#SET(LIBRARIES ${LIBRARIES} ${UDUNITSLIB})

INCLUDE_DIRECTORIES(.)
#ADD_SUBDIRECTORY(external)

IF(BUILD_SERIALIZATION)
  SET(BOOST_MIN_VERSION 1.44.0)
  #SET(Boost_USE_STATIC_LIBS     ON)
  #SET(Boost_USE_MULTITHREADED   TRUE)
  #SET(Boost_USE_STATIC_RUNTIME  OFF)
  SET(BOOST_LIBS serialization)
  FIND_PACKAGE(Boost ${BOOST_MIN_VERSION} COMPONENTS ${BOOST_LIBS} REQUIRED)
  IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
    SET(LIBRARIES ${LIBRARIES} ${Boost_LIBRARIES})
    ADD_DEFINITIONS(-DVIENNAMATERIALS_HAS_SERIALIZATION)
  ENDIF(Boost_FOUND)
ENDIF(BUILD_SERIALIZATION)

IF(BUILD_DTD_CHECK_SUPPORT)
  FIND_PACKAGE(LibXml2)
  IF(LIBXML2_FOUND)
    INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})
    SET(LIBRARIES ${LIBRARIES} ${LIBXML2_LIBRARIES}) 
    ADD_DEFINITIONS(-DVIENNAMATERIALS_HAS_LIBXML2)
  ENDIF(LIBXML2_FOUND)
ENDIF(BUILD_DTD_CHECK_SUPPORT)

# build the ViennaMaterials library
SET(VIENNAMATERIALS_LIBRARY viennamaterials)
AUX_SOURCE_DIRECTORY(src/ LIBSOURCES) 
ADD_LIBRARY(${VIENNAMATERIALS_LIBRARY} ${LIBSOURCES})
SET(LIBRARIES ${LIBRARIES} ${VIENNAMATERIALS_LIBRARY})

INSTALL(TARGETS ${VIENNAMATERIALS_LIBRARY} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

IF(BUILD_EXAMPLES)
  ADD_SUBDIRECTORY(examples)
ENDIF(BUILD_EXAMPLES)

